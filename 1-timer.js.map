{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst button = document.querySelector('.timer-btn');\nconst timerDays = document.querySelector('.value[data-days]');\nconst timerHours = document.querySelector('.value[data-hours]');\nconst timerMinutes = document.querySelector('.value[data-minutes]');\nconst timerSeconds = document.querySelector('.value[data-seconds]');\nconst input = document.querySelector('#datetime-picker');\n\nlet userSelectedDate;\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      alert('Please choose a date in the future');\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  input.disabled = true;\n  const timerId = setInterval(() => {\n    const rest = convertMs(userSelectedDate - Date.now());\n    const { days, hours, minutes, seconds } = rest;\n\n    timerDays.textContent = addLeadingZero(rest.days);\n    timerHours.textContent = addLeadingZero(rest.hours);\n    timerMinutes.textContent = addLeadingZero(rest.minutes);\n    timerSeconds.textContent = addLeadingZero(rest.seconds);\n    if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n      clearInterval(timerId);\n      button.disabled = false;\n      input.disabled = false;\n    }\n  }, 1000);\n});\n"],"names":["button","timerDays","timerHours","timerMinutes","timerSeconds","input","userSelectedDate","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","timerId","rest"],"mappings":"mIAGA,MAAMA,EAAS,SAAS,cAAc,YAAY,EAC5CC,EAAY,SAAS,cAAc,mBAAmB,EACtDC,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAe,SAAS,cAAc,sBAAsB,EAC5DC,EAAe,SAAS,cAAc,sBAAsB,EAC5DC,EAAQ,SAAS,cAAc,kBAAkB,EAEvD,IAAIC,EACJN,EAAO,SAAW,GAElB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAmB,KAAK,OAC1B,MAAM,oCAAoC,EAC1CN,EAAO,SAAW,IAElBA,EAAO,SAAW,EAEtB,CACF,EACAS,EAAU,mBAAoBF,CAAO,EAErC,SAASG,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAjB,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBK,EAAM,SAAW,GACjB,MAAMa,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAOT,EAAUJ,EAAmB,KAAK,IAAG,CAAE,EAC9C,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKI,EAE1ClB,EAAU,YAAce,EAAeG,EAAK,IAAI,EAChDjB,EAAW,YAAcc,EAAeG,EAAK,KAAK,EAClDhB,EAAa,YAAca,EAAeG,EAAK,OAAO,EACtDf,EAAa,YAAcY,EAAeG,EAAK,OAAO,EAClDP,IAAS,GAAKC,IAAU,GAAKC,IAAY,GAAKC,IAAY,IAC5D,cAAcG,CAAO,EACrBlB,EAAO,SAAW,GAClBK,EAAM,SAAW,GAErB,EAAG,GAAI,CACT,CAAC"}